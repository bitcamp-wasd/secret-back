<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.battle.mapper.BattleMapper">

    <!-- 배틀 정보 가져오기 -->
    <select id="getBattleById" resultType="com.example.battle.entity.Battle">
        SELECT battle_id AS battleId, post_id1 AS postId1, post_id2 AS postId2, user_id AS userId,
               title, create_date AS createDate, end_date AS endDate, state,
               vote1_cnt AS vote1Cnt, vote2_cnt AS vote2Cnt, views
        FROM battle WHERE battle_id = #{battleId}
    </select>

    <!--배틀 조회수 증가-->
    <update id="incrementViews">
        UPDATE battle SET views = views +1
        WHERE battle_id  = #{battleId}
    </update>

    <!-- 배틀 투표 -->
    <insert id="insertBattleVote">
        INSERT INTO battle_vote_list (battle_id, user_id, post_id)
        VALUES (#{battleId},#{userId},#{postId})
    </insert>

    <delete id="deleteBattleVote">
        DELETE FROM battle_vote_list
        WHERE battle_id = #{battleId} AND user_id = #{userId}
    </delete>

    <select id="getBattleVote" resultType="java.lang.Long">
        SELECT post_id
        FROM battle_vote_list
        WHERE battle_id = #{battleId} AND user_id = #{userId}
    </select>

    <update id="incrementVote1Cnt">
        UPDATE battle SET vote1_cnt = vote1_cnt + 1
        WHERE battle_id = #{battleId}
    </update>

    <update id="decrementVote1Cnt">
        UPDATE battle SET vote1_cnt = vote1_cnt - 1
        WHERE battle_id = #{battleId}
    </update>

    <update id="incrementVote2Cnt">
        UPDATE battle SET vote2_cnt = vote2_cnt + 1
        WHERE battle_id = #{battleId}
    </update>

    <update id="decrementVote2Cnt">
        update battle SET vote2_cnt = vote2_cnt - 1
        WHERE battle_id = #{battleId}
    </update>

    <update id="updateBattleVote">
        UPDATE battle_vote_list SET post_id = #{postId}
        WHERE battle_id = #{battleId} AND user_id = #{userId}
    </update>

    <!--배틀 댓글 -->

    <resultMap id="BattleCommentMap" type="com.example.battle.entity.BattleComment">
        <id property="battleCommentId" column="battle_comment_id" />
        <result property="userId" column="user_id" />
        <result property="createDate" column="create_date" />
        <result property="comment" column="comment" />
        <association property="battle" javaType="com.example.battle.entity.Battle">
            <id property="battleId" column="battle_id"/>
        </association>
    </resultMap>

    <insert id="insertComment" parameterType="com.example.battle.entity.BattleComment">
        INSERT INTO battle_comment (battle_id, user_id, create_date, comment)
        VALUES (#{battle.battleId}, #{userId}, NOW(), #{comment})
    </insert>

    <update id="updateComment" parameterType="com.example.battle.entity.BattleComment">
        UPDATE battle_comment
        SET comment = #{comment}, create_date = NOW()
        WHERE battle_comment_id = #{battleCommentId}  AND user_id = #{userId} AND battle_id = #{battle.battleId}
    </update>

    <delete id="deleteComment">
        DELETE FROM battle_comment
        WHERE battle_comment_id = #{battleCommentId} AND user_id = #{userId} AND battle_id = #{battleId}
    </delete>
    
    <select id="countCommentsByBattleId" resultType="int">
        SELECT COUNT(*) FROM battle_comment
        WHERE battle_id = #{battleId}
    </select>

    <select id="getCommentsByBattleId" resultMap="BattleCommentMap">
        SELECT * FROM battle_comment
        WHERE battle_id = #{battleId}
        ORDER BY create_date DESC
        LIMIT #{pageable.offset}, #{pageable.pageSize}
    </select>




    <!--
        배틀 등록하기
        {
            title,
            url,
            url
        }
        이렇게 입력하면 url 에서 postId 추출 후 해당 postId 저장
    -->
<!--    <insert id="insertBattle" useGeneratedKeys="true" keyProperty="battleId">-->
<!--        INSERT INTO battle (post_id1, post_id2, user_id, title, create_date, end_date, state, vote1_cnt, vote2_cnt)-->
<!--        VALUES (#{postId1}, #{postId2}, #{userId}, #{title}, #{createDate}, #{endDate}, #{state}, #{vote1Cnt}, #{vote2Cnt})-->
<!--    </insert>-->

    <!--
        마이페이지 내가 등록한 배틀
        무한 스크롤 slice
    -->
<!--    <select id="selectBattleByUserId" resultMap="BattleResultMap">-->
<!--        SELECT b.*, v.*, c.*, p.title as postTitle1, p2.title as postTitle2, u.nickname-->
<!--        FROM battle b-->
<!--                 LEFT JOIN battle_vote_list v ON b.battle_id = v.battle_id-->
<!--                 LEFT JOIN battle_comment c ON b.battle_id = c.battle_id-->
<!--                 LEFT JOIN post p ON b.post_id1 = p.post_id-->
<!--                 LEFT JOIN post p2 ON b.post_id2 = p2.post_id-->
<!--                 LEFT JOIN user u ON b.user_id = u.user_id-->
<!--        WHERE b.user_id = #{userId}-->
<!--        ORDER BY b.create_date DESC-->
<!--            LIMIT #{limit} OFFSET #{offset}-->
<!--    </select>-->

    <!--
        진행 중인 배틀 리스트
        무한 스크롤 slice
    -->
<!--    <select id="selectBattle" resultMap="BattleResultMap">-->
<!--        SELECT b.*, v.*, c.*, p.title as postTitle1, p2.title as postTitle2, u.nickname-->
<!--        FROM battle b-->
<!--                 LEFT JOIN battle_vote_list v ON b.battle_id = v.battle_id-->
<!--                 LEFT JOIN battle_comment c ON b.battle_id = c.battle_id-->
<!--                 LEFT JOIN post p ON b.post_id1 = p.post_id-->
<!--                 LEFT JOIN post p2 ON b.post_id2 = p2.post_id-->
<!--                 LEFT JOIN user u ON b.user_id = u.user_id-->
<!--        WHERE b.state = '진행중'-->
<!--        ORDER BY b.create_date DESC-->
<!--            LIMIT #{limit} OFFSET #{offset}-->
<!--    </select>-->

</mapper>